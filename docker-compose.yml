version: '3.8'

services:
  # MySQL Database
  db:
    image: mysql:8.0
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: programming_channels
      MYSQL_USER: app_user
      MYSQL_PASSWORD: app_password
    ports:
      - "3306:3306"
    volumes:
      - db_data:/var/lib/mysql
      - ./backend/src/migrations:/docker-entrypoint-initdb.d
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p$$MYSQL_ROOT_PASSWORD"]
      interval: 5s
      timeout: 5s
      retries: 20

  # Backend API
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    restart: always
    depends_on:
      db:
        condition: service_healthy
    environment:
      DB_HOST: db
      DB_USER: app_user
      DB_PASSWORD: app_password
      DB_NAME: programming_channels
      JWT_SECRET: your_jwt_secret_key
      NODE_ENV: development
      PORT: 6000
    ports:
      - "6000:6000"
    volumes:
      - ./backend:/app
      - /app/node_modules
      - uploads_data:/app/uploads
    networks:
      - app-network

  # Frontend App
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    restart: always
    depends_on:
      - backend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  db_data:
  uploads_data: